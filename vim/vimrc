" Basics
set nocompatible                             " choose no compatibility with legacy vi
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'vim-scripts/L9'
Bundle 'vim-scripts/zoom.vim'
Bundle 'vim-scripts/tComment'
Bundle 'kchmck/vim-coffee-script'
Bundle 'tsaleh/vim-supertab'
Bundle 'janx/vim-rubytest'
Bundle 'jakar/vim-json'
Bundle 'mineiro/vim-latex'
Bundle 'altercation/vim-colors-solarized'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-bundler'
Bundle 'tpope/vim-unimpaired'
Bundle 'tpope/vim-rails'
Bundle 'kien/ctrlp.vim'
Bundle 'vim-scripts/Align'
Bundle 'mileszs/ack.vim'
Bundle 'scrooloose/nerdtree'
Bundle 'slim-template/vim-slim'
" Bundle 'wookiehangover/jshint.vim'

filetype plugin indent on                    " Turns on filetype detection, filetype plugins, and filetype indenting
                                             " all of which add nice extra features to whatever language you're using
syntax enable

" enable angle brackets visual selection w/ vi<
" http://vim.1045645.n5.nabble.com/Highlighting-matching-angle-brackets-lt-gt-td1188629.html
set matchpairs+=<:>

set encoding=utf-8                           " Set encoding
set showcmd
set shell=/usr/local/bin/zsh\ --interactive

set foldmethod=manual                        " Folding settings
set number                                   " show line numbers
set autoindent                               " automatic indentation after newline
set pastetoggle=<F2>
let mapleader = ","                          " Set mapleader
inoremap jjj <ESC>

set autowriteall " http://vim.wikia.com/wiki/Auto_save_files_when_focus_is_lost
au FocusLost * :wa

" Whitespace stuff
set nowrap
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set list listchars=tab:\ \ ,trail:Â·


" rubytest
let g:rubytest_in_quickfix = 1
let g:rubytest_cmd_spec = "spek %p"
let g:rubytest_cmd_feature = "kucumber %p"
let g:rubytest_cmd_test = "ruby %p"


" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase
nnoremap <leader>/ let @/=''<CR>


" Ack
nnoremap <leader>f :Ack 


" Vim Easytags
" easytags polluted the tags-var and did frequently fail to create/update the tags file due to this
" Also it does not take the Gemfile into account

" Moving lines up/down: http://vim.wikia.com/wiki/Moving_lines_up_or_down_in_a_file
nnoremap <A-Down> :m .+1<CR>==
nnoremap <A-Up> :m .-2<CR>==
inoremap <A-Down> <Esc>:m .+1<CR>==gi
inoremap <A-Up> <Esc>:m .-2<CR>==gi
vnoremap <A-Down> :m '>+1<CR>gv=gv
vnoremap <A-Up> :m '<-2<CR>gv=gv


" Font size Zoom
map <c-+> :ZoomIn
map <c--> :ZoomOut

" nowrap toggle
map <F2> :set nowrap!<CR>
set textwidth=200


" powerline
" https://powerline.readthedocs.org/en/latest/overview.html#installation
set rtp+=/usr/local/lib/python2.7/site-packages/powerline/bindings/vim


" Visual
set guifont=Meslo\ LG\ M\ DZ\ for\ Powerline:h10
if has("gui_running")
  call togglebg#map("<F9>")
  set guioptions=egmrt
  " solarized settings
  colorscheme solarized
  let g:solarized_bold = 0
  let g:solarized_contrast = "high"
  set background=dark
else
  colorscheme elflord
endif

" spell check
map <F3> :setlocal spell spelllang=de_de<CR>
map <F4> :set nospell<CR>


" Statusline
set laststatus=2
set statusline=File:\ %F\ Line:\ %4l/%L/%P\ %3b


" TComment
map <C-C> :TComment<cr>


" split navigation
nnoremap <silent> <c-k> :wincmd k<CR>
nnoremap <silent> <c-j> :wincmd j<CR>
nnoremap <silent> <c-h> :wincmd h<CR>
nnoremap <silent> <c-l> :wincmd l<CR>


" split windows
nnoremap <leader>sh :vsplit<CR>
nnoremap <leader>sv :split<CR>


" CtrlP
let g:ctrlp_show_hidden = 1
nnoremap <leader>pp :CtrlP<CR>
nnoremap <leader>pb :CtrlPBuffer<CR>
nnoremap <leader>pm :CtrlPBufTag<CR>
let g:ctrlp_custom_ignore = {
      \'dir':  '\.git$\|\.hg$\|\.svn$\|\.yardoc\|public\/images\|public\/system\|log\|tmp$',
      \'file': '\.sassc$\|\.exe$\|\.so$\|\.dat$'
      \}

" Completion colors: http://vim.wikia.com/wiki/Omni_completion_popup_menu
highlight Pmenu guibg=grey10 guifg=LightGreen gui=bold
set ofu=syntaxcomplete#Complete

" Align
vnoremap <leader>a :Align =<CR>

" Fugitive
nnoremap <leader>go :Gbrowse<CR>
nnoremap <leader>gb :Gblame<CR>
" nnoremap q] :cnext<CR>
" nnoremap q[ :cprev<CR>


" NERDTree
let NERDTreeShowHidden=1
let NERDTreeStatusline = ""
nnoremap <leader>ntt :NERDTreeToggle<CR>
nnoremap <leader>ntr :NERDTreeFind<CR>
autocmd VimEnter * NERDTree | wincmd p

" Tagbar
nnoremap <leader>tb :TagbarToggle<CR>


" Opens a tab edit command with the path of the currently edited file filled in
" Normal mode: <Leader>t
map <Leader>te :tabe <C-R>=expand("%:p:h") . "/" <CR>

" vim templates
autocmd! BufNewFile * silent! 0r ~/.vim/templates/template.%:e


" Thorfile, Rakefile and Gemfile are Ruby
au BufRead,BufNewFile {Gemfile,Rakefile,Thorfile,config.ru} set ft=ruby

" OPTIONAL: Starting with Vim 7, the filetype of empty .tex files defaults to
" 'plaintex' instead of 'tex', which results in vim-latex not being loaded.
" The following changes the default filetype back to 'tex':
let g:tex_flavor='latex'
let g:Tex_ViewRule_pdf='Skim'
let g:Tex_SmartKeyQuote=0

" Super Tab Completion
function! Smart_TabComplete()
  let line = getline('.')                         " curline
  let substr = strpart(line, -1, col('.')+1)      " from start to cursor
  let substr = matchstr(substr, "[^ \t]*$")       " word till cursor
  if (strlen(substr)==0)                          " nothing to match on empty string
    return "\<tab>"
  endif
  let has_period = match(substr, '\.') != -1      " position of period, if any
  let has_slash = match(substr, '\/') != -1       " position of slash, if any
  if (!has_period && !has_slash)
    return "\<C-X>\<C-P>"                         " existing text matching
  elseif ( has_slash )
    return "\<C-X>\<C-F>"                         " file matching
  else
    return "\<C-X>\<C-O>"                         " plugin matching
  endif
endfunction


" CTags
let Tlist_Ctags_Cmd='/usr/local/bin/ctags'
map <Leader>rt :!ctags --extra=+f -R *<CR><CR>
set tags=tags;/
map <C-D> <C-]>
" map <F4> :w<cr>:TlistUpdate<cr>
" map <F3> :TlistToggle<cr>
let tlist_php_settings = 'php;c:class;f:function;d:constant'  " set the names of flags
let Tlist_File_Fold_Auto_Close = 1                            " close all folds except for current file
let Tlist_GainFocus_On_ToggleOpen = 1                         " make tlist pane active when opened

" Remember last location in file
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal g'\"" | endif
endif

" Allow saving of files as sudo when I forgot to start vim using sudo.
" http://stackoverflow.com/questions/2600783/how-does-the-vim-write-with-sudo-trick-work
cmap w!! %!sudo tee > /dev/null %


"Directories for swp files
set backupdir=~/.vim/backup
set directory=~/.vim/backup
